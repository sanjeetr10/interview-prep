** Write Recursive and iterative version of :
    a) pre-order
    b) in-order
    c) post-order
1. Give an algorithm for finding maximum elements in binary tree.
2. Give an algorithm for finding maximum element in binary tree without recursion.
3. Give an algorithm for searching an element in binary tree.
4. Give an algorithm for searching an element in binary tree without recursion,
5. Give an algorithm for inserting an element into binary tree.
6. Give an algorithm for finding the size of binary tree.
7. Give an algorithm for finding size of binary tree without recursion.
8. Give an algorithm for deleting the tree.
9. Give an algorithm for printing the level order data in reverse order. For example the tree below should be: 4 5 6 7 2 3 1

                 1
               /    \
              2       3
             /  \   /   \
            4    5  6   7

 10. Give an algorithm for finding the height (or depth) of the binary tree.
 11. Give an algorithm for finding the height (or depth) of the binary tree, with stack.
 12. Give an algorithm for finding the height (or depth) of the binary tree, without recursion.
 13. Give an algorithm for finding the minimum depth of the binary tree.
 14. Give an algorithm for finding the deepest node of the binary tree.
 15. Give an algorithm for deleting an element (assuming data is given) rom binary tree.
 16. Give an algorithm for finding the number of leaves in the binary tree without using recursion.
 17. Give an algorithm for finding the number of full nodes in the binary tree without using recursion.
 18. Give an algorithm for finding the number of half nodes (nodes with only one child) in the binary tree without recursion.
 19. Given two binary tree, return if they are structurally identical.
 20. Give an algorithm for finding the diameter of the binary tree. The diameter of a tree (sometimes called the width) is the number of nodes on the longest path between two leaves in the tree.
 21. Give an algorithm for finding the width of the binary tree. The width of a tree is the maximum number of nodes at any level (or depth) in the tree.
 22. Give an algorithm for finding the level that has the maximum sum in the binary tree.
 23. Given a binary tree, print out all its root-to-leaf paths.
 24. Give an algorithm for checking the existence of path with given sum. That means, given a sum, check whether there exists a path from root to any of the nodes.
 25. Give an algorithm for finding the sum of all elements in binary tree.
 26. Give an algorithm for finding the sum of all elements in binary tree without recursion.
 27. Give an algorithm for converting a tree to its mirror. Mirror of a tree is another tree with left and right children of all non-leaf interchanged.
 28. Given two trees, give an algorithm for checking whether they are mirrors of each other.
 29. Give an algorithm for constructing binary tree from given Inorder and Preorder traversals.
 30. Give an algorithm for constructing binary tree from given Inorder and Postorder traversals.
 31. If we are given two traversal sequences, can we construct the binary tree uniquely?
 32. Give an algorithm for printing all the ancestors of a node in a Binary tree.
 33. Give an algorithm for finding LCA (Least Common Ancestor) of two nodes in a Binary Tree.
 34. Zigzag Tree Traversal: Give an algorithm to traverse a binary tree in zigzag order. For example the output for the tree below should be : 1 3 2 4 5 6 7
                   1
                /    \
               2       3
              /  \   /   \
             4    5  6   7
 35. Give an algorithm for finding the vertical sum of a binary tree.
 36. How many different trees are possible with n nodes.
 37. How to generate all different BSTs with n nodes?
 38. Given a tree with a special property where leaves are represented with 'L' and internal node with 'I'. Also, assume that each node has either 0 or 2 children.
     Given preorder traversal of this tree, construct the tree.
 39. Given a binary tree with three pointers (left, right and nextSibling), give an algorithm for filling the nextSibling pointers assuming they are NULL initially.
 40. Is there any other way of solving Problem-39 ?
